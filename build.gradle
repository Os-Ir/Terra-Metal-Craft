buildscript {
    repositories {
        jcenter()
        maven {
            name = 'ForgeMaven'
            url = 'https://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = '1.3.2.1'
group = 'com.osir.tmc' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'tmc'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    maven {
        name = 'ChickenBonesMaven'
        url = 'http://chickenbones.net/maven'
    }
    maven {
        name = 'ForestryMaven'
        url = 'http://maven.ic2.player.to'
    }
    maven {
        name = 'MTMaven'
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = 'CuckooMaven'
        url = 'https://zi-jing.github.io/cuckoo-maven/maven'
    }
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = 'snapshot_20171003'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile 'some.group:artifact:version:classifier'
    //compile 'some.group:artifact:version'

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile 'codechicken:CodeChickenLib:1.12.2-3.2.2.353:deobf'
    compile 'net.sengir.forestry:forestry_1.12.2:5.8.2.422:api'
    compile 'CraftTweaker2:CraftTweaker2-API:4.1.9.6:deobf'
    compile 'com.github.zi_jing.cuckoolib:CuckooLib:1.0.4'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.main.output
    from sourceSets.main.allSource
    include 'com/osir/tmc/api/**'
}

artifacts {
    archives apiJar
}

// 强制UTF-8构建
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}